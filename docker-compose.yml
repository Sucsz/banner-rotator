services:
  app:
    build: .
    depends_on:
      - postgres
      - kafka
    container_name: banner-app
    command: ["./banner-rotator"]
    environment:
      - APP_HTTP_PORT=${APP_HTTP_PORT}
      - APP_LOG_LEVEL=${APP_LOG_LEVEL}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
    ports:
      - "${HOST_HTTP_PORT}:${APP_HTTP_PORT}"

  postgres:
    image: postgres:17.5
    container_name: banner-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${HOST_POSTGRES_PORT}:${APP_POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: banner-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: ${APP_ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${HOST_ZOOKEEPER_PORT}:${APP_ZOOKEEPER_PORT}"

  kafka:
    image: confluentinc/cp-kafka:8.0.0
    container_name: banner-kafka
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${APP_ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BROKERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "${HOST_KAFKA_PORT}:${APP_KAFKA_PORT}"

volumes:
  pgdata:
