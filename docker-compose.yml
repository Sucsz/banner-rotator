services:
  app:
    build: .
    container_name: banner-app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    command: ["./banner-rotator"]
    environment:
      - APP_HTTP_PORT=${APP_HTTP_PORT}
      - APP_LOG_LEVEL=${APP_LOG_LEVEL}
      - APP_POSTGRES_HOST=${APP_POSTGRES_HOST}
      - APP_POSTGRES_PORT=${APP_POSTGRES_PORT}
      - APP_POSTGRES_USER=${APP_POSTGRES_USER}
      - APP_POSTGRES_PASSWORD=${APP_POSTGRES_PASSWORD}
      - APP_POSTGRES_DBNAME=${APP_POSTGRES_DBNAME}
      - APP_POSTGRES_SSLMODE=${APP_POSTGRES_SSLMODE}
      - APP_POSTGRES_TIMEOUT=${APP_POSTGRES_TIMEOUT}
      - APP_KAFKA_BROKERS=${APP_KAFKA_BROKERS}
      - APP_KAFKA_TOPIC=${APP_KAFKA_TOPIC}
    ports:
      - "${HOST_HTTP_PORT}:${APP_HTTP_PORT}"

  postgres:
    image: postgres:17.5
    container_name: banner-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${HOST_POSTGRES_PORT}:${APP_POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: banner-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: ${APP_ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${HOST_ZOOKEEPER_PORT}:${APP_ZOOKEEPER_PORT}"

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: banner-kafka
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${APP_ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BROKERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "${HOST_KAFKA_PORT}:${APP_KAFKA_PORT}"
    healthcheck:
      test: [ "CMD", "bash", "-c", "kafka-topics --bootstrap-server localhost:${APP_KAFKA_PORT} --list" ]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
